22. General Parenthesis. (Medium): Python

Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.
Input: n = 3
Output: ["((()))","(()())","(())()","()(())","()()()"]
Solution:
class Solution:
    def generateParenthesis(self, n: int) -> List[str]:
        
        self.res = []
        self.helper("",n,n)
        return self.res
    
    def helper(self,current, left, right):
        if right == 0:
            self.res.append(current)
        else:
            if left>0:
                self.helper(current+"(", left-1, right)
            if left<right:
                self.helper(current+")", left, right-1)
                

        
        
 
